Traceback (most recent call last):
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/shared/ifbstor1/software/miniconda/envs/jupyter-book-0.13.1/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# RDF graph, in turtle syntax, stored in a string
my_rdf_data = """
@prefix ns: <http://my_voc/> .
@prefix snp: <http://my_snps/> .

snp:123 ns:is_a_variant_of "NEMO" .
snp:rs527330002 ns:is_a_variant_of "RAC1" .
snp:rs527330002 ns:refers_to_organism <http://www.uniprot.org/taxonomy/9606> .
snp:rs61753123 ns:is_a_variant_of "RAC1" .
"""

# Initialization of the in-memory RDF graph, RDFlib Graph object
kg = Graph()

# Parsing of the RDF data
kg.parse(data=my_rdf_data, format='turtle')

# Printing the size of the graph and serializing it again. 
print(f'the knowledge graph contains {len(kg)} triples\n')
print(kg.serialize(format="turtle"))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 13[0m
[1;32m      2[0m my_rdf_data [38;5;241m=[39m [38;5;124m"""[39m
[1;32m      3[0m [38;5;124m@prefix ns: <http://my_voc/> .[39m
[1;32m      4[0m [38;5;124m@prefix snp: <http://my_snps/> .[39m
[0;32m   (...)[0m
[1;32m      9[0m [38;5;124msnp:rs61753123 ns:is_a_variant_of [39m[38;5;124m"[39m[38;5;124mRAC1[39m[38;5;124m"[39m[38;5;124m .[39m
[1;32m     10[0m [38;5;124m"""[39m
[1;32m     12[0m [38;5;66;03m# Initialization of the in-memory RDF graph, RDFlib Graph object[39;00m
[0;32m---> 13[0m kg [38;5;241m=[39m [43mGraph[49m()
[1;32m     15[0m [38;5;66;03m# Parsing of the RDF data[39;00m
[1;32m     16[0m kg[38;5;241m.[39mparse(data[38;5;241m=[39mmy_rdf_data, [38;5;28mformat[39m[38;5;241m=[39m[38;5;124m'[39m[38;5;124mturtle[39m[38;5;124m'[39m)

[0;31mNameError[0m: name 'Graph' is not defined
NameError: name 'Graph' is not defined

